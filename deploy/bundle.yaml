apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: everest-operator
    control-plane: controller-manager
  name: everest-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: backupstorages.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: BackupStorage
    listKind: BackupStorageList
    plural: backupstorages
    singular: backupstorage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupStorage is the Schema for the backupstorages API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BackupStorageSpec defines the desired state of BackupStorage.
            properties:
              allowedNamespaces:
                description: AllowedNamespaces is the list of namespaces where the operator will copy secrets provided in the CredentialsSecretsName.
                items:
                  type: string
                type: array
              bucket:
                description: Bucket is a name of bucket.
                type: string
              credentialsSecretName:
                description: CredentialsSecretName is the name of the secret with credentials.
                type: string
              description:
                description: Description stores description of a backup storage.
                type: string
              endpointURL:
                description: EndpointURL is an endpoint URL of backup storage.
                type: string
              forcePathStyle:
                default: false
                description: |-
                  ForcePathStyle is set to use path-style URLs.
                  If unspecified, the default value is false.
                type: boolean
              pvcSpec:
                description: |-
                  PVCSpec is a spec of PVC for local storage.
                  Ignored if Type is not local.
                properties:
                  accessModes:
                    description: |-
                      accessModes contains the desired access modes the volume should have.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                    items:
                      type: string
                    type: array
                  dataSource:
                    description: |-
                      dataSource field can be used to specify either:
                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                      * An existing PVC (PersistentVolumeClaim)
                      If the provisioner or an external controller can support the specified data source,
                      it will create a new volume based on the contents of the specified data source.
                      When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                      and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                      If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  dataSourceRef:
                    description: |-
                      dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                      volume is desired. This may be any object from a non-empty API group (non
                      core object) or a PersistentVolumeClaim object.
                      When this field is specified, volume binding will only succeed if the type of
                      the specified object matches some installed volume populator or dynamic
                      provisioner.
                      This field will replace the functionality of the dataSource field and as such
                      if both fields are non-empty, they must have the same value. For backwards
                      compatibility, when namespace isn't specified in dataSourceRef,
                      both fields (dataSource and dataSourceRef) will be set to the same
                      value automatically if one of them is empty and the other is non-empty.
                      When namespace is specified in dataSourceRef,
                      dataSource isn't set to the same value and must be empty.
                      There are three important differences between dataSource and dataSourceRef:
                      * While dataSource only allows two specific types of objects, dataSourceRef
                        allows any non-core object, as well as PersistentVolumeClaim objects.
                      * While dataSource ignores disallowed values (dropping them), dataSourceRef
                        preserves all values, and generates an error if a disallowed value is
                        specified.
                      * While dataSource only allows local objects, dataSourceRef allows objects
                        in any namespaces.
                      (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                      (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of resource being referenced
                          Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                          (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: |-
                      resources represents the minimum resources the volume should have.
                      If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                      that are lower than previous value but must still be higher than capacity recorded in the
                      status field of the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  selector:
                    description: selector is a label query over volumes to consider for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  storageClassName:
                    description: |-
                      storageClassName is the name of the StorageClass required by the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                    type: string
                  volumeAttributesClassName:
                    description: |-
                      volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                      If specified, the CSI driver will create or update the volume with the attributes defined
                      in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                      it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                      will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                      If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                      will be set by the persistentvolume controller if it exists.
                      If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                      set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                      exists.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                      (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                    type: string
                  volumeMode:
                    description: |-
                      volumeMode defines what type of volume is required by the claim.
                      Value of Filesystem is implied when not included in claim spec.
                    type: string
                  volumeName:
                    description: volumeName is the binding reference to the PersistentVolume backing this claim.
                    type: string
                type: object
              region:
                description: Region is a region where the bucket is located.
                type: string
              type:
                description: Type is a type of backup storage.
                enum:
                - s3
                - azure
                - local
                type: string
              verifyTLS:
                default: true
                description: |-
                  VerifyTLS is set to ensure TLS/SSL verification.
                  If unspecified, the default value is true.
                type: boolean
            required:
            - bucket
            - credentialsSecretName
            - type
            type: object
          status:
            description: BackupStorageStatus defines the observed state of BackupStorage.
            properties:
              usedNamespaces:
                additionalProperties:
                  type: boolean
                type: object
            required:
            - usedNamespaces
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: databaseclusterbackups.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseClusterBackup
    listKind: DatabaseClusterBackupList
    plural: databaseclusterbackups
    shortNames:
    - dbbackup
    - dbb
    singular: databaseclusterbackup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The original database cluster name
      jsonPath: .spec.dbClusterName
      name: Cluster
      type: string
    - description: Backup destination
      jsonPath: .status.destination
      name: Destination
      type: string
    - description: Job status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Time the job was completed
      jsonPath: .status.completed
      name: Completed
      type: date
    - description: Age of the resource
      jsonPath: .status.created
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseClusterBackup is the Schema for the databaseclusterbackups API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterBackupSpec defines the desired state of DatabaseClusterBackup.
            properties:
              backupStorageName:
                description: BackupStorageName is the name of the BackupStorage used for backups.
                type: string
              dbClusterName:
                description: DBClusterName is the original database cluster name.
                type: string
            required:
            - backupStorageName
            - dbClusterName
            type: object
          status:
            description: DatabaseClusterBackupStatus defines the observed state of DatabaseClusterBackup.
            properties:
              completed:
                description: Completed is the time when the job was completed.
                format: date-time
                type: string
              created:
                description: Created is the timestamp of the upstream backup's creation.
                format: date-time
                type: string
              destination:
                description: Destination is the full path to the backup.
                type: string
              gaps:
                description: Gaps identifies if there are gaps detected in the PITR logs
                type: boolean
              state:
                description: State is the DatabaseBackup state.
                type: string
            required:
            - gaps
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: databaseclusterrestores.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseClusterRestore
    listKind: DatabaseClusterRestoreList
    plural: databaseclusterrestores
    shortNames:
    - dbrestore
    - dbr
    singular: databaseclusterrestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster name
      jsonPath: .spec.dbClusterName
      name: Cluster
      type: string
    - description: DBClusterBackup name
      jsonPath: .spec.dataSource.dbClusterBackupName
      name: Backup
      type: string
    - description: Backup path
      jsonPath: .spec.dataSource.backupSource.path
      name: Path
      type: string
    - description: Storage name
      jsonPath: .spec.dataSource.backupSource.backupStorageName
      name: Storage
      type: string
    - description: Job status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Completed time
      jsonPath: .status.completed
      name: Completed
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseClusterRestore is the Schema for the databaseclusterrestores API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterRestoreSpec defines the desired state of DatabaseClusterRestore.
            properties:
              dataSource:
                description: DataSource defines a data source for restoration.
                properties:
                  backupSource:
                    description: BackupSource is the backup source to restore from
                    properties:
                      backupStorageName:
                        description: BackupStorageName is the name of the BackupStorage used for backups.
                        type: string
                      path:
                        description: Path is the path to the backup file/directory.
                        type: string
                    required:
                    - backupStorageName
                    - path
                    type: object
                  dbClusterBackupName:
                    description: DBClusterBackupName is the name of the DB cluster backup to restore from
                    type: string
                  pitr:
                    description: PITR is the point-in-time recovery configuration
                    properties:
                      date:
                        description: 'Date is the UTC date to recover to. The accepted format: "2006-01-02T15:04:05Z".'
                        type: string
                      type:
                        default: date
                        description: Type is the type of recovery.
                        enum:
                        - date
                        - latest
                        type: string
                    type: object
                type: object
              dbClusterName:
                description: DBClusterName defines the cluster name to restore.
                type: string
            required:
            - dataSource
            - dbClusterName
            type: object
          status:
            description: DatabaseClusterRestoreStatus defines the observed state of DatabaseClusterRestore.
            properties:
              completed:
                format: date-time
                type: string
              message:
                type: string
              state:
                description: RestoreState represents state of restoration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: databaseclusters.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseCluster
    listKind: DatabaseClusterList
    plural: databaseclusters
    shortNames:
    - db
    - dbc
    - dbcluster
    singular: databasecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.size
      name: Size
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.hostname
      name: Hostname
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseCluster is the Schema for the databaseclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterSpec defines the desired state of DatabaseCluster.
            properties:
              allowUnsafeConfiguration:
                description: AllowUnsafeConfiguration field used to ensure that the user can create configurations unfit for production use.
                type: boolean
              backup:
                description: Backup is the backup specification
                properties:
                  enabled:
                    description: Enabled is a flag to enable backups
                    type: boolean
                  pitr:
                    description: PITR is the configuration of the point in time recovery
                    properties:
                      backupStorageName:
                        description: BackupStorageName is the name of the BackupStorage where the PITR is enabled
                        type: string
                      enabled:
                        description: Enabled is a flag to enable PITR
                        type: boolean
                      uploadIntervalSec:
                        description: UploadIntervalSec number of seconds between the binlogs uploads
                        type: integer
                    required:
                    - enabled
                    type: object
                  schedules:
                    description: Schedules is a list of backup schedules
                    items:
                      description: BackupSchedule is the backup schedule configuration.
                      properties:
                        backupStorageName:
                          description: |-
                            BackupStorageName is the name of the BackupStorage CR that defines the
                            storage location
                          type: string
                        enabled:
                          description: Enabled is a flag to enable the schedule
                          type: boolean
                        name:
                          description: Name is the name of the schedule
                          type: string
                        retentionCopies:
                          description: RetentionCopies is the number of backup copies to retain
                          format: int32
                          type: integer
                        schedule:
                          description: Schedule is the cron schedule
                          type: string
                      required:
                      - backupStorageName
                      - enabled
                      - name
                      - schedule
                      type: object
                    type: array
                required:
                - enabled
                type: object
              dataSource:
                description: DataSource defines a data source for bootstraping a new cluster
                properties:
                  backupSource:
                    description: BackupSource is the backup source to restore from
                    properties:
                      backupStorageName:
                        description: BackupStorageName is the name of the BackupStorage used for backups.
                        type: string
                      path:
                        description: Path is the path to the backup file/directory.
                        type: string
                    required:
                    - backupStorageName
                    - path
                    type: object
                  dbClusterBackupName:
                    description: DBClusterBackupName is the name of the DB cluster backup to restore from
                    type: string
                  pitr:
                    description: PITR is the point-in-time recovery configuration
                    properties:
                      date:
                        description: 'Date is the UTC date to recover to. The accepted format: "2006-01-02T15:04:05Z".'
                        type: string
                      type:
                        default: date
                        description: Type is the type of recovery.
                        enum:
                        - date
                        - latest
                        type: string
                    type: object
                type: object
              engine:
                description: Engine is the database engine specification
                properties:
                  config:
                    description: Config is the engine configuration
                    type: string
                  crVersion:
                    description: |-
                      CRVersion is the desired version of the CR to use with the
                      underlying operator.
                      If unspecified, everest-operator will use the same version as the operator.


                      NOTE: Updating this property post installation may lead to a restart of the cluster.
                    type: string
                  replicas:
                    description: Replicas is the number of engine replicas
                    format: int32
                    minimum: 1
                    type: integer
                  resources:
                    description: |-
                      Resources are the resource limits for each engine replica.
                      If not set, resource limits are not imposed
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: CPU is the CPU resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory is the memory resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  storage:
                    description: Storage is the engine storage configuration
                    properties:
                      class:
                        description: Class is the storage class to use for the persistent volume claim
                        type: string
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Size is the size of the persistent volume claim
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - size
                    type: object
                  type:
                    description: Type is the engine type
                    enum:
                    - pxc
                    - postgresql
                    - psmdb
                    type: string
                  userSecretsName:
                    description: UserSecretsName is the name of the secret containing the user secrets
                    type: string
                  version:
                    description: Version is the engine version
                    type: string
                required:
                - storage
                - type
                type: object
              monitoring:
                description: Monitoring is the monitoring configuration
                properties:
                  monitoringConfigName:
                    description: MonitoringConfigName is the name of a monitoringConfig CR.
                    type: string
                  resources:
                    description: Resources defines resource limitations for the monitoring.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              paused:
                description: Paused is a flag to stop the cluster
                type: boolean
              proxy:
                description: |-
                  Proxy is the proxy specification. If not set, an appropriate
                  proxy specification will be applied for the given engine. A
                  common use case for setting this field is to control the
                  external access to the database cluster.
                properties:
                  config:
                    description: Config is the proxy configuration
                    type: string
                  expose:
                    description: Expose is the proxy expose configuration
                    properties:
                      ipSourceRanges:
                        description: |-
                          IPSourceRanges is the list of IP source ranges (CIDR notation)
                          to allow access from. If not set, there is no limitations
                        items:
                          description: IPSourceRange represents IP addresses in CIDR notation or without a netmask.
                          type: string
                        type: array
                      type:
                        default: internal
                        description: Type is the expose type, can be internal or external
                        enum:
                        - internal
                        - external
                        type: string
                    type: object
                  replicas:
                    description: Replicas is the number of proxy replicas
                    format: int32
                    minimum: 1
                    type: integer
                  resources:
                    description: |-
                      Resources are the resource limits for each proxy replica.
                      If not set, resource limits are not imposed
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: CPU is the CPU resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory is the memory resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  type:
                    description: Type is the proxy type
                    enum:
                    - mongos
                    - haproxy
                    - proxysql
                    - pgbouncer
                    type: string
                type: object
            required:
            - engine
            type: object
          status:
            description: DatabaseClusterStatus defines the observed state of DatabaseCluster.
            properties:
              activeStorage:
                description: ActiveStorage is the storage used in cluster (psmdb only)
                type: string
              crVersion:
                description: CRVersion is the observed version of the CR used with the underlying operator.
                type: string
              hostname:
                description: Hostname is the hostname where the cluster can be reached
                type: string
              message:
                description: Message is extra information about the cluster
                type: string
              port:
                description: Port is the port where the cluster can be reached
                format: int32
                type: integer
              ready:
                description: Ready is the number of ready pods
                format: int32
                type: integer
              recommendedCRVersion:
                description: |-
                  RecommendedCRVersion is the recommended version of the CR to use.
                  If set, the CR needs to be updated to this version before upgrading the operator.
                  If unset, the CR is already at the recommended version.
                type: string
              size:
                description: Size is the total number of pods
                format: int32
                type: integer
              status:
                description: Status is the status of the cluster
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: databaseengines.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseEngine
    listKind: DatabaseEngineList
    plural: databaseengines
    shortNames:
    - dbengine
    singular: databaseengine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.operatorVersion
      name: Operator Version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseEngine is the Schema for the databaseengines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseEngineSpec is a spec for a database engine.
            properties:
              allowedVersions:
                items:
                  type: string
                type: array
              type:
                description: |-
                  EngineType stands for the supported database engines. Right now it's only pxc
                  and psmdb. However, it can be ps, pg and any other source.
                type: string
            required:
            - type
            type: object
          status:
            description: DatabaseEngineStatus defines the observed state of DatabaseEngine.
            properties:
              availableVersions:
                description: Versions struct represents available versions of database engine components.
                properties:
                  backup:
                    additionalProperties:
                      description: |-
                        Component contains information of the database engine component.
                        Database Engine component can be database engine, database proxy or tools image path.
                      properties:
                        critical:
                          type: boolean
                        imageHash:
                          type: string
                        imagePath:
                          type: string
                        status:
                          description: ComponentStatus represents status of the database engine component.
                          type: string
                      type: object
                    description: ComponentsMap is a map of database engine components.
                    type: object
                  engine:
                    additionalProperties:
                      description: |-
                        Component contains information of the database engine component.
                        Database Engine component can be database engine, database proxy or tools image path.
                      properties:
                        critical:
                          type: boolean
                        imageHash:
                          type: string
                        imagePath:
                          type: string
                        status:
                          description: ComponentStatus represents status of the database engine component.
                          type: string
                      type: object
                    description: ComponentsMap is a map of database engine components.
                    type: object
                  proxy:
                    additionalProperties:
                      additionalProperties:
                        description: |-
                          Component contains information of the database engine component.
                          Database Engine component can be database engine, database proxy or tools image path.
                        properties:
                          critical:
                            type: boolean
                          imageHash:
                            type: string
                          imagePath:
                            type: string
                          status:
                            description: ComponentStatus represents status of the database engine component.
                            type: string
                        type: object
                      description: ComponentsMap is a map of database engine components.
                      type: object
                    type: object
                  tools:
                    additionalProperties:
                      additionalProperties:
                        description: |-
                          Component contains information of the database engine component.
                          Database Engine component can be database engine, database proxy or tools image path.
                        properties:
                          critical:
                            type: boolean
                          imageHash:
                            type: string
                          imagePath:
                            type: string
                          status:
                            description: ComponentStatus represents status of the database engine component.
                            type: string
                        type: object
                      description: ComponentsMap is a map of database engine components.
                      type: object
                    type: object
                type: object
              operatorUpgrade:
                description: |-
                  OperatorUpgrade contains the status of the operator upgrade.
                  This is set only if the `everest.percona.com/upgrade-operator-to` annotation is present.
                properties:
                  installPlanRef:
                    description: InstallPlanRef is a reference to the InstallPlan object created for the operator upgrade.
                    properties:
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  message:
                    type: string
                  phase:
                    description: UpgradePhase represents the phase of the operator upgrade.
                    type: string
                  startedAt:
                    format: date-time
                    type: string
                  targetVersion:
                    description: TargetVersion is the version to which the operator should be upgraded.
                    type: string
                type: object
              operatorVersion:
                type: string
              pendingOperatorUpgrades:
                items:
                  description: OperatorUpgrade contains the information about the operator upgrade.
                  properties:
                    installPlanRef:
                      description: InstallPlanRef is a reference to the InstallPlan object created for the operator upgrade.
                      properties:
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    targetVersion:
                      description: TargetVersion is the version to which the operator should be upgraded.
                      type: string
                  type: object
                type: array
              status:
                description: EngineState represents state of engine in a k8s cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: monitoringconfigs.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: MonitoringConfig
    listKind: MonitoringConfigList
    plural: monitoringconfigs
    singular: monitoringconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Monitoring instance type
      jsonPath: .spec.type
      name: Type
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonitoringConfig is the Schema for the monitoringconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MonitoringConfigSpec defines the desired state of MonitoringConfig.
            properties:
              allowedNamespaces:
                description: AllowedNamespaces is the list of namespaces where the operator will copy secrets provided in the CredentialsSecretsName.
                items:
                  type: string
                type: array
              credentialsSecretName:
                description: CredentialsSecretName is the name of the secret with credentials.
                type: string
              pmm:
                description: PMM is configuration for the PMM monitoring type.
                properties:
                  image:
                    description: Image is a Docker image name to use for deploying PMM client. Defaults to using the latest version.
                    type: string
                  url:
                    description: URL is url to the monitoring instance.
                    type: string
                required:
                - image
                - url
                type: object
              type:
                description: Type is type of monitoring.
                enum:
                - pmm
                type: string
              verifyTLS:
                default: true
                description: |-
                  VerifyTLS is set to ensure TLS/SSL verification.
                  If unspecified, the default value is true.
                type: boolean
            required:
            - credentialsSecretName
            - type
            type: object
          status:
            description: MonitoringConfigStatus defines the observed state of MonitoringConfig.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: everest-operator
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: everest-operator
  name: everest-operator-leader-election-role
  namespace: everest-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-manager-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.victoriametrics.com
  resources:
  - vmagents
  verbs:
  - create
  - delete
  - get
  - update
- apiGroups:
  - operators.coreos.com
  resources:
  - installplans
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgbackups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - psmdb.percona.com
  resources:
  - perconaservermongodbbackups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - psmdb.percona.com
  resources:
  - perconaservermongodbrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - psmdb.percona.com
  resources:
  - perconaservermongodbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pxc.percona.com
  resources:
  - perconaxtradbclusterbackups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pxc.percona.com
  resources:
  - perconaxtradbclusterrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pxc.percona.com
  resources:
  - perconaxtradbclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: everest-operator
  name: everest-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: everest-operator
  name: everest-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: everest-operator
  name: everest-operator-leader-election-rolebinding
  namespace: everest-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: everest-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: everest-operator
  name: everest-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everest-operator-manager-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: everest-operator
  name: everest-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everest-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: everest-operator
    control-plane: controller-manager
  name: everest-operator-controller-manager-metrics-service
  namespace: everest-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: everest-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: everest-operator
    control-plane: controller-manager
  name: everest-operator-controller-manager
  namespace: everest-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/instance: everest-operator
        app.kubernetes.io/name: everest-operator
        app.kubernetes.io/part-of: everest-operator
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/perconalab/everest-operator:0.0.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: everest-operator-controller-manager
      terminationGracePeriodSeconds: 10

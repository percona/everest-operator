apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
    control-plane: controller-manager
  name: everest-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: backupstorages.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: BackupStorage
    listKind: BackupStorageList
    plural: backupstorages
    singular: backupstorage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupStorage is the Schema for the backupstorages API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BackupStorageSpec defines the desired state of BackupStorage.
            properties:
              allowedNamespaces:
                description: |-
                  AllowedNamespaces is the list of namespaces where the operator will copy secrets provided in the CredentialsSecretsName.

                  Deprecated: BackupStorages are now used only in the namespaces where they are created.
                items:
                  type: string
                type: array
              bucket:
                description: Bucket is a name of bucket.
                type: string
              credentialsSecretName:
                description: CredentialsSecretName is the name of the secret with credentials.
                type: string
              description:
                description: Description stores description of a backup storage.
                type: string
              endpointURL:
                description: EndpointURL is an endpoint URL of backup storage.
                type: string
              forcePathStyle:
                default: false
                description: |-
                  ForcePathStyle is set to use path-style URLs.
                  If unspecified, the default value is false.
                type: boolean
              region:
                description: Region is a region where the bucket is located.
                type: string
              type:
                description: Type is a type of backup storage.
                enum:
                - s3
                - azure
                type: string
              verifyTLS:
                default: true
                description: |-
                  VerifyTLS is set to ensure TLS/SSL verification.
                  If unspecified, the default value is true.
                type: boolean
            required:
            - bucket
            - credentialsSecretName
            - type
            type: object
          status:
            description: BackupStorageStatus defines the observed state of BackupStorage.
            properties:
              usedNamespaces:
                additionalProperties:
                  type: boolean
                description: 'Deprecated: BackupStorages are now used only in the namespaces where they are created.'
                type: object
            required:
            - usedNamespaces
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseclusterbackups.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseClusterBackup
    listKind: DatabaseClusterBackupList
    plural: databaseclusterbackups
    shortNames:
    - dbbackup
    - dbb
    singular: databaseclusterbackup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The original database cluster name
      jsonPath: .spec.dbClusterName
      name: Cluster
      type: string
    - description: Backup destination
      jsonPath: .status.destination
      name: Destination
      type: string
    - description: Job status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Time the job was completed
      jsonPath: .status.completed
      name: Completed
      type: date
    - description: Age of the resource
      jsonPath: .status.created
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseClusterBackup is the Schema for the databaseclusterbackups API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterBackupSpec defines the desired state of DatabaseClusterBackup.
            properties:
              backupStorageName:
                description: |-
                  BackupStorageName is the name of the BackupStorage used for backups.
                  The BackupStorage must be created in the same namespace as the DatabaseCluster.
                type: string
              dbClusterName:
                description: DBClusterName is the original database cluster name.
                type: string
            required:
            - backupStorageName
            - dbClusterName
            type: object
          status:
            description: DatabaseClusterBackupStatus defines the observed state of DatabaseClusterBackup.
            properties:
              completed:
                description: Completed is the time when the job was completed.
                format: date-time
                type: string
              created:
                description: Created is the timestamp of the upstream backup's creation.
                format: date-time
                type: string
              destination:
                description: Destination is the full path to the backup.
                type: string
              gaps:
                description: Gaps identifies if there are gaps detected in the PITR logs
                type: boolean
              latestRestorableTime:
                description: LatestRestorableTime is the latest time that can be used for PITR restore
                format: date-time
                type: string
              state:
                description: State is the DatabaseBackup state.
                type: string
            required:
            - gaps
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseclusterrestores.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseClusterRestore
    listKind: DatabaseClusterRestoreList
    plural: databaseclusterrestores
    shortNames:
    - dbrestore
    - dbr
    singular: databaseclusterrestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster name
      jsonPath: .spec.dbClusterName
      name: Cluster
      type: string
    - description: DBClusterBackup name
      jsonPath: .spec.dataSource.dbClusterBackupName
      name: Backup
      type: string
    - description: Backup path
      jsonPath: .spec.dataSource.backupSource.path
      name: Path
      type: string
    - description: Storage name
      jsonPath: .spec.dataSource.backupSource.backupStorageName
      name: Storage
      type: string
    - description: Job status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Completed time
      jsonPath: .status.completed
      name: Completed
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseClusterRestore is the Schema for the databaseclusterrestores API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterRestoreSpec defines the desired state of DatabaseClusterRestore.
            properties:
              dataSource:
                description: DataSource defines a data source for restoration.
                properties:
                  backupSource:
                    description: BackupSource is the backup source to restore from
                    properties:
                      backupStorageName:
                        description: |-
                          BackupStorageName is the name of the BackupStorage used for backups.
                          The BackupStorage must be created in the same namespace as the DatabaseCluster.
                        type: string
                      path:
                        description: Path is the path to the backup file/directory.
                        type: string
                    required:
                    - backupStorageName
                    - path
                    type: object
                  dbClusterBackupName:
                    description: DBClusterBackupName is the name of the DB cluster backup to restore from
                    type: string
                  pitr:
                    description: PITR is the point-in-time recovery configuration
                    properties:
                      date:
                        description: 'Date is the UTC date to recover to. The accepted format: "2006-01-02T15:04:05Z".'
                        type: string
                      type:
                        default: date
                        description: Type is the type of recovery.
                        enum:
                        - date
                        - latest
                        type: string
                    type: object
                type: object
              dbClusterName:
                description: DBClusterName defines the cluster name to restore.
                type: string
            required:
            - dataSource
            - dbClusterName
            type: object
          status:
            description: DatabaseClusterRestoreStatus defines the observed state of DatabaseClusterRestore.
            properties:
              completed:
                format: date-time
                type: string
              message:
                type: string
              state:
                description: RestoreState represents state of restoration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseclusters.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseCluster
    listKind: DatabaseClusterList
    plural: databaseclusters
    shortNames:
    - db
    - dbc
    - dbcluster
    singular: databasecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.size
      name: Size
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.hostname
      name: Hostname
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseCluster is the Schema for the databaseclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterSpec defines the desired state of DatabaseCluster.
            properties:
              allowUnsafeConfiguration:
                description: |-
                  AllowUnsafeConfiguration field used to ensure that the user can create configurations unfit for production use.

                  Deprecated: AllowUnsafeConfiguration will not be supported in the future releases.
                type: boolean
              backup:
                description: Backup is the backup specification
                properties:
                  enabled:
                    description: |-
                      Enabled is a flag to enable backups
                      Deprecated. Please use db.spec.backup.schedules[].enabled to control each schedule separately and db.spec.backup.pitr.enabled to control PITR.
                    type: boolean
                  pitr:
                    description: PITR is the configuration of the point in time recovery
                    properties:
                      backupStorageName:
                        description: |-
                          BackupStorageName is the name of the BackupStorage where the PITR is enabled
                          The BackupStorage must be created in the same namespace as the DatabaseCluster.
                        type: string
                      enabled:
                        description: Enabled is a flag to enable PITR
                        type: boolean
                      uploadIntervalSec:
                        description: UploadIntervalSec number of seconds between the binlogs uploads
                        type: integer
                    required:
                    - enabled
                    type: object
                  schedules:
                    description: Schedules is a list of backup schedules
                    items:
                      description: BackupSchedule is the backup schedule configuration.
                      properties:
                        backupStorageName:
                          description: |-
                            BackupStorageName is the name of the BackupStorage CR that defines the
                            storage location.
                            The BackupStorage must be created in the same namespace as the DatabaseCluster.
                          type: string
                        enabled:
                          description: Enabled is a flag to enable the schedule
                          type: boolean
                        name:
                          description: Name is the name of the schedule
                          type: string
                        retentionCopies:
                          description: RetentionCopies is the number of backup copies to retain
                          format: int32
                          type: integer
                        schedule:
                          description: Schedule is the cron schedule
                          type: string
                      required:
                      - backupStorageName
                      - enabled
                      - name
                      - schedule
                      type: object
                    type: array
                type: object
              dataSource:
                description: DataSource defines a data source for bootstraping a new cluster
                properties:
                  backupSource:
                    description: BackupSource is the backup source to restore from
                    properties:
                      backupStorageName:
                        description: |-
                          BackupStorageName is the name of the BackupStorage used for backups.
                          The BackupStorage must be created in the same namespace as the DatabaseCluster.
                        type: string
                      path:
                        description: Path is the path to the backup file/directory.
                        type: string
                    required:
                    - backupStorageName
                    - path
                    type: object
                  dbClusterBackupName:
                    description: DBClusterBackupName is the name of the DB cluster backup to restore from
                    type: string
                  pitr:
                    description: PITR is the point-in-time recovery configuration
                    properties:
                      date:
                        description: 'Date is the UTC date to recover to. The accepted format: "2006-01-02T15:04:05Z".'
                        type: string
                      type:
                        default: date
                        description: Type is the type of recovery.
                        enum:
                        - date
                        - latest
                        type: string
                    type: object
                type: object
              engine:
                description: Engine is the database engine specification
                properties:
                  config:
                    description: Config is the engine configuration
                    type: string
                  crVersion:
                    description: |-
                      CRVersion is the desired version of the CR to use with the
                      underlying operator.
                      If unspecified, everest-operator will use the same version as the operator.

                      NOTE: Updating this property post installation may lead to a restart of the cluster.
                    type: string
                  replicas:
                    description: Replicas is the number of engine replicas
                    format: int32
                    minimum: 1
                    type: integer
                  resources:
                    description: |-
                      Resources are the resource limits for each engine replica.
                      If not set, resource limits are not imposed
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: CPU is the CPU resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory is the memory resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  storage:
                    description: Storage is the engine storage configuration
                    properties:
                      class:
                        description: Class is the storage class to use for the persistent volume claim
                        type: string
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Size is the size of the persistent volume claim
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - size
                    type: object
                  type:
                    description: Type is the engine type
                    enum:
                    - pxc
                    - postgresql
                    - psmdb
                    type: string
                  userSecretsName:
                    description: UserSecretsName is the name of the secret containing the user secrets
                    type: string
                  version:
                    description: Version is the engine version
                    type: string
                required:
                - storage
                - type
                type: object
              monitoring:
                description: Monitoring is the monitoring configuration
                properties:
                  monitoringConfigName:
                    description: |-
                      MonitoringConfigName is the name of a monitoringConfig CR.
                      The MonitoringConfig must be created in the same namespace as the DatabaseCluster.
                    type: string
                  resources:
                    description: Resources defines resource limitations for the monitoring.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              paused:
                description: Paused is a flag to stop the cluster
                type: boolean
              proxy:
                description: |-
                  Proxy is the proxy specification. If not set, an appropriate
                  proxy specification will be applied for the given engine. A
                  common use case for setting this field is to control the
                  external access to the database cluster.
                properties:
                  config:
                    description: Config is the proxy configuration
                    type: string
                  expose:
                    description: Expose is the proxy expose configuration
                    properties:
                      ipSourceRanges:
                        description: |-
                          IPSourceRanges is the list of IP source ranges (CIDR notation)
                          to allow access from. If not set, there is no limitations
                        items:
                          description: IPSourceRange represents IP addresses in CIDR notation or without a netmask.
                          type: string
                        type: array
                      type:
                        default: internal
                        description: Type is the expose type, can be internal or external
                        enum:
                        - internal
                        - external
                        type: string
                    type: object
                  replicas:
                    description: Replicas is the number of proxy replicas
                    format: int32
                    minimum: 1
                    type: integer
                  resources:
                    description: |-
                      Resources are the resource limits for each proxy replica.
                      If not set, resource limits are not imposed
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: CPU is the CPU resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory is the memory resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  type:
                    description: Type is the proxy type
                    enum:
                    - mongos
                    - haproxy
                    - proxysql
                    - pgbouncer
                    type: string
                type: object
              sharding:
                description: Sharding is the sharding configuration. PSMDB-only
                properties:
                  configServer:
                    description: ConfigServer represents the sharding configuration server settings
                    properties:
                      replicas:
                        description: Replicas is the amount of configServers
                        format: int32
                        minimum: 1
                        type: integer
                    required:
                    - replicas
                    type: object
                  enabled:
                    description: Enabled defines if the sharding is enabled
                    type: boolean
                  shards:
                    description: Shards defines the number of shards
                    format: int32
                    minimum: 1
                    type: integer
                required:
                - configServer
                - enabled
                - shards
                type: object
            required:
            - engine
            type: object
          status:
            description: DatabaseClusterStatus defines the observed state of DatabaseCluster.
            properties:
              activeStorage:
                description: ActiveStorage is the storage used in cluster (psmdb only)
                type: string
              conditions:
                description: Conditions contains the observed conditions of the DatabaseCluster.
                items:
                  description: Condition contains details for one aspect of the current state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              crVersion:
                description: CRVersion is the observed version of the CR used with the underlying operator.
                type: string
              details:
                description: Details provides full status of the upstream cluster as a plain text.
                type: string
              hostname:
                description: Hostname is the hostname where the cluster can be reached
                type: string
              message:
                description: Message is extra information about the cluster
                type: string
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed for this DatabaseCluster.
                format: int64
                type: integer
              port:
                description: Port is the port where the cluster can be reached
                format: int32
                type: integer
              ready:
                description: Ready is the number of ready pods
                format: int32
                type: integer
              recommendedCRVersion:
                description: |-
                  RecommendedCRVersion is the recommended version of the CR to use.
                  If set, the CR needs to be updated to this version before upgrading the operator.
                  If unset, the CR is already at the recommended version.
                type: string
              size:
                description: Size is the total number of pods
                format: int32
                type: integer
              status:
                description: Status is the status of the cluster
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseengines.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseEngine
    listKind: DatabaseEngineList
    plural: databaseengines
    shortNames:
    - dbengine
    singular: databaseengine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.operatorVersion
      name: Operator Version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseEngine is the Schema for the databaseengines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseEngineSpec is a spec for a database engine.
            properties:
              allowedVersions:
                items:
                  type: string
                type: array
              type:
                description: |-
                  EngineType stands for the supported database engines. Right now it's only pxc
                  and psmdb. However, it can be ps, pg and any other source.
                type: string
            required:
            - type
            type: object
          status:
            description: DatabaseEngineStatus defines the observed state of DatabaseEngine.
            properties:
              availableVersions:
                description: Versions struct represents available versions of database engine components.
                properties:
                  backup:
                    additionalProperties:
                      description: |-
                        Component contains information of the database engine component.
                        Database Engine component can be database engine, database proxy or tools image path.
                      properties:
                        critical:
                          type: boolean
                        imageHash:
                          type: string
                        imagePath:
                          type: string
                        status:
                          description: ComponentStatus represents status of the database engine component.
                          type: string
                      type: object
                    description: ComponentsMap is a map of database engine components.
                    type: object
                  engine:
                    additionalProperties:
                      description: |-
                        Component contains information of the database engine component.
                        Database Engine component can be database engine, database proxy or tools image path.
                      properties:
                        critical:
                          type: boolean
                        imageHash:
                          type: string
                        imagePath:
                          type: string
                        status:
                          description: ComponentStatus represents status of the database engine component.
                          type: string
                      type: object
                    description: ComponentsMap is a map of database engine components.
                    type: object
                  proxy:
                    additionalProperties:
                      additionalProperties:
                        description: |-
                          Component contains information of the database engine component.
                          Database Engine component can be database engine, database proxy or tools image path.
                        properties:
                          critical:
                            type: boolean
                          imageHash:
                            type: string
                          imagePath:
                            type: string
                          status:
                            description: ComponentStatus represents status of the database engine component.
                            type: string
                        type: object
                      description: ComponentsMap is a map of database engine components.
                      type: object
                    type: object
                  tools:
                    additionalProperties:
                      additionalProperties:
                        description: |-
                          Component contains information of the database engine component.
                          Database Engine component can be database engine, database proxy or tools image path.
                        properties:
                          critical:
                            type: boolean
                          imageHash:
                            type: string
                          imagePath:
                            type: string
                          status:
                            description: ComponentStatus represents status of the database engine component.
                            type: string
                        type: object
                      description: ComponentsMap is a map of database engine components.
                      type: object
                    type: object
                type: object
              operatorUpgrade:
                description: OperatorUpgrade contains the status of the operator upgrade.
                properties:
                  installPlanRef:
                    description: |-
                      InstallPlanRef is a reference to the InstallPlan object created for the operator upgrade.

                      We do not recommended approving this InstallPlan directly from the Kubernetes API.
                      This is because this InstallPlan may also upgrade other operators in the namespace and that
                      can have unintended consequences.
                      This behaviour is not a bug from Everest, but an unfortunate limitation of OLM.
                      We suggest using the Everest API/UI to handle operator upgrades, which will perform a series
                      of checks and safely upgrade all operators in the namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  message:
                    type: string
                  phase:
                    description: UpgradePhase represents the phase of the operator upgrade.
                    type: string
                  startedAt:
                    format: date-time
                    type: string
                  targetVersion:
                    description: TargetVersion is the version to which the operator should be upgraded.
                    type: string
                type: object
              operatorVersion:
                type: string
              pendingOperatorUpgrades:
                items:
                  description: OperatorUpgrade contains the information about the operator upgrade.
                  properties:
                    installPlanRef:
                      description: |-
                        InstallPlanRef is a reference to the InstallPlan object created for the operator upgrade.

                        We do not recommended approving this InstallPlan directly from the Kubernetes API.
                        This is because this InstallPlan may also upgrade other operators in the namespace and that
                        can have unintended consequences.
                        This behaviour is not a bug from Everest, but an unfortunate limitation of OLM.
                        We suggest using the Everest API/UI to handle operator upgrades, which will perform a series
                        of checks and safely upgrade all operators in the namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    targetVersion:
                      description: TargetVersion is the version to which the operator should be upgraded.
                      type: string
                  type: object
                type: array
              status:
                description: EngineState represents state of engine in a k8s cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: dataimporters.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DataImporter
    listKind: DataImporterList
    plural: dataimporters
    singular: dataimporter
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.displayName
      name: DisplayName
      type: string
    - jsonPath: .spec.description
      name: Description
      type: string
    - jsonPath: .spec.supportedEngines
      name: SupportedEngines
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataImporter defines a reusable strategy for importing data into a DatabaseCluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DataImporterSpec defines the specification of a DataImporter.
            properties:
              clusterPermissions:
                description: ClusterPermissions is the list of cluster-wide permissions that the data importer needs.
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    resourceNames:
                      description: ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    resources:
                      description: Resources is a list of resources this rule applies to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - verbs
                  type: object
                type: array
              config:
                description: Config contains additional configuration defined for the data importer.
                properties:
                  openAPIV3Schema:
                    description: OpenAPIV3Schema is the OpenAPI v3 schema of the data importer.
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              description:
                description: Description is the description of the data importer.
                type: string
              displayName:
                description: DisplayName is a human-readable name for the data importer.
                type: string
              jobSpec:
                description: JobSpec is the specification of the data importer job.
                properties:
                  command:
                    description: Command is the command to run the data importer.
                    items:
                      type: string
                    type: array
                  image:
                    description: Image is the image of the data importer.
                    type: string
                type: object
              permissions:
                description: Permissions is the list of permissions that the data importer needs.
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    resourceNames:
                      description: ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    resources:
                      description: Resources is a list of resources this rule applies to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - verbs
                  type: object
                type: array
              supportedEngines:
                description: SupportedEngines is the list of engines that the data importer supports.
                items:
                  description: |-
                    EngineType stands for the supported database engines. Right now it's only pxc
                    and psmdb. However, it can be ps, pg and any other source.
                  type: string
                type: array
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: dataimportjobs.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DataImportJob
    listKind: DataImportJobList
    plural: dataimportjobs
    shortNames:
    - dij
    singular: dataimportjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.targetClusterRef.name
      name: TargetCluster
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataImportJob is the schema for the dataimportjobs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              dataImporterRef:
                description: DataImporterRef is the reference to the data importer.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              parameters:
                description: |-
                  Params defines the configuration parameters for the data import job.
                  These parameters are specific to the DataImporter being used and must conform to
                  the schema defined in the DataImporter's .spec.config.openAPIV3Schema.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              source:
                description: Source is the source of the data to import.
                properties:
                  backupStorageRef:
                    description: BackupStorageRef is the reference to the backup storage.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  path:
                    description: |-
                      Path is the path to the directory to import the data from.
                      This may be a path to a file or a directory, depending on the data importer.
                    type: string
                  s3:
                    description: S3Ref is the reference to the S3 source.
                    properties:
                      bucket:
                        description: Bucket is the name of the S3 bucket.
                        type: string
                      credentialsSecretRef:
                        description: |-
                          CredentialsSecretRef is the reference to the secret containing the S3 credentials.
                          The Secret must contain the keys `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      endpointURL:
                        description: EndpointURL is an endpoint URL of backup storage.
                        type: string
                      forcePathStyle:
                        default: false
                        description: |-
                          ForcePathStyle is set to use path-style URLs.
                          If unspecified, the default value is false.
                        type: boolean
                      region:
                        description: Region is the region of the S3 bucket.
                        type: string
                      verifyTLS:
                        default: true
                        description: |-
                          VerifyTLS is set to ensure TLS/SSL verification.
                          If unspecified, the default value is true.
                        type: boolean
                    type: object
                type: object
              targetClusterRef:
                description: TargetClusterRef is the reference to the target cluster.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
          status:
            properties:
              jobRef:
                description: JobRef is the reference to the job that is running the data import.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              message:
                description: Message is the message of the data import job.
                type: string
              phase:
                description: Phase is the current phase of the data import job.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: monitoringconfigs.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: MonitoringConfig
    listKind: MonitoringConfigList
    plural: monitoringconfigs
    singular: monitoringconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Monitoring instance type
      jsonPath: .spec.type
      name: Type
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonitoringConfig is the Schema for the monitoringconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MonitoringConfigSpec defines the desired state of MonitoringConfig.
            properties:
              allowedNamespaces:
                description: AllowedNamespaces is the list of namespaces where the operator will copy secrets provided in the CredentialsSecretsName.
                items:
                  type: string
                type: array
              credentialsSecretName:
                description: CredentialsSecretName is the name of the secret with credentials.
                type: string
              pmm:
                description: PMM is configuration for the PMM monitoring type.
                properties:
                  image:
                    description: Image is a Docker image name to use for deploying PMM client. Defaults to using the latest version.
                    type: string
                  url:
                    description: URL is url to the monitoring instance.
                    type: string
                required:
                - image
                - url
                type: object
              type:
                description: Type is type of monitoring.
                enum:
                - pmm
                type: string
              verifyTLS:
                default: true
                description: |-
                  VerifyTLS is set to ensure TLS/SSL verification.
                  If unspecified, the default value is true.
                type: boolean
            required:
            - credentialsSecretName
            - type
            type: object
          status:
            description: MonitoringConfigStatus defines the observed state of MonitoringConfig.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-leader-election-role
  namespace: everest-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-backupstorage-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-backupstorage-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databasecluster-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databasecluster-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databaseclusterbackup-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databaseclusterbackup-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databaseclusterrestore-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databaseclusterrestore-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databaseengine-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-databaseengine-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages
  - databaseclusterbackups
  - databaseclusterrestores
  - databaseclusters
  - databaseengines
  - dataimportjobs
  - monitoringconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/finalizers
  - databaseclusterbackups/finalizers
  - databaseclusterrestores/finalizers
  - databaseclusters/finalizers
  - databaseengines/finalizers
  - dataimportjobs/finalizers
  - monitoringconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/status
  - databaseclusterbackups/status
  - databaseclusterrestores/status
  - databaseclusters/status
  - databaseengines/status
  - dataimportjobs/status
  - monitoringconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - dataimporters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operator.victoriametrics.com
  resources:
  - vmagents
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - installplans
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgbackups
  - perconapgclusters
  - perconapgrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - postgres-operator.crunchydata.com
  resources:
  - postgresclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - psmdb.percona.com
  resources:
  - perconaservermongodbbackups
  - perconaservermongodbrestores
  - perconaservermongodbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pxc.percona.com
  resources:
  - perconaxtradbclusterbackups
  - perconaxtradbclusterrestores
  - perconaxtradbclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-monitoringconfig-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-monitoringconfig-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-leader-election-rolebinding
  namespace: everest-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: everest-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
  name: everest-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everest-operator-manager-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everest-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everest-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
    control-plane: controller-manager
  name: everest-operator-controller-manager-metrics-service
  namespace: everest-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: everest-operator
    control-plane: controller-manager
  name: everest-operator-controller-manager
  namespace: everest-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: docker.io/perconalab/everest-operator:0.0.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: everest-operator-controller-manager
      terminationGracePeriodSeconds: 10

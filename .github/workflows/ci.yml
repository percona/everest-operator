---
name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
jobs:
  golang-build:
    name: Build Go binary
    timeout-minutes: 30
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go release
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run tests
        run: |
          make build

  golang-tests:
    name: Go unit tests
    timeout-minutes: 30
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go release
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run tests
        run: |
          make test

  integration-tests-flows:
    name: Integration tests
    strategy:
      fail-fast: false
      matrix:
        make_target:
          - test-integration-core
          - test-integration-features
          - test-integration-operator-upgrade
    uses: ./.github/workflows/ci-integration-tests.yaml
    secrets: inherit
    with:
      make_target: ${{ matrix.make_target }}

  release:
    name: Operator code generation check
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go release
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Check default main state - generated files
        run: |
          make release
          #          git diff --exit-code $(git ls-files | grep -v "bundle/manifests/everest-operator.clusterserviceversion.yaml")
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # post diff as a suggestion to commit to the PR (if any)
      - uses: ./.github/actions/reviewdog-suggester
        with:
          tool_name: make_release

  bundle-build:
    name: Operator bundle build check
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go release
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Build bundle image
        run: |
          make bundle-build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-crds:
    name: Operator CRDs checks
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go release
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install Kubernetes tools
        uses: ./.github/actions/install-kubernetes-tools
        with:
          install-kubectl: true
          install-kuttl: false
          install-k3d: true

      - name: Create K3D cluster
        run: |
          make k3d-cluster-up

      - name: Install CRDs into the K8s cluster
        run: |
          make install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Uninstall CRDs from the K8s cluster
        run: |
          make uninstall
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

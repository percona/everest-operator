---
name: E2E
on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
env:
  TOOLS_PATH: "/opt/tools/bin"
jobs:
  # Only the following E2E tests require EKS:
  # - test/e2e
  # - test/e2e-core
  # - test/e2e-db-upgrade
  # - test/e2e-operator-upgrade
  # TODO: Review this condition once we have more tests running on K3D.
  e2e-eks-tests:
    name: EKS tests
    if: |
      contains(github.event.pull_request.labels.*.name, 'test/e2e') ||
      contains(github.event.pull_request.labels.*.name, 'test/e2e-operator-upgrade') ||
      contains(github.event.pull_request.labels.*.name, 'test/e2e-core') ||
      contains(github.event.pull_request.labels.*.name, 'test/e2e-db-upgrade')
    timeout-minutes: 80
    concurrency: eks-e2e-tests
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: "/home/runner/.kube/config"
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Go release
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Build operator
        run:
          make build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Kubernetes tools
        uses: ./.github/actions/install-kubernetes-tools
        with:
          install-kubectl: true
          install-kuttl: true
          install-k3d: false

      - name: Install EKS tools
        run: |
          # Install EKSCTL
          ARCH=amd64
          PLATFORM=$(uname -s)_${ARCH}
          curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_${PLATFORM}.tar.gz"
          tar -xzf eksctl_${PLATFORM}.tar.gz -C "${TOOLS_PATH}"
          chmod +x "${TOOLS_PATH}"/eksctl

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.EVEREST_EKS_E2E_IAM_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.EVEREST_EKS_E2E_IAM_USER_ACCESS_KEY_SECRET }}
          aws-region: us-east-2

      - name: Update EKS kubeconfig
        run: |
          aws eks update-kubeconfig --name everest-e2e-dev-eks-cluster

      - name: Scale up cluster
        run: |
          eksctl scale nodegroup --cluster="$CLUSTER_NAME" --nodes=10 "$NODEPOOL_NAME" --wait
        env:
          CLUSTER_NAME: "everest-e2e-dev-eks-cluster"
          NODEPOOL_NAME: "everest-e2e-dev-eks-workers-glowworm"

      - name: Run operator upgrade tests
        if: |
          contains(github.event.pull_request.labels.*.name, 'test/e2e') ||
          contains(github.event.pull_request.labels.*.name, 'test/e2e-operator-upgrade')
        run: |
          make test-e2e-operator-upgrade

      - name: Clean up custom resources
        continue-on-error: true
        # If this does not finish in 10 minutes, it's stuck with some resource having a finalizer.
        timeout-minutes: 10
        run: |
          make cluster-cleanup

      - name: Run core tests
        if: |
          contains(github.event.pull_request.labels.*.name, 'test/e2e') ||
          contains(github.event.pull_request.labels.*.name, 'test/e2e-core')
        run: |
          make test-e2e-core

      - name: Clean up custom resources
        continue-on-error: true
        # If this does not finish in 10 minutes, it's stuck with some resource having a finalizer.
        timeout-minutes: 10
        run: |
          make cluster-cleanup

      - name: Run db upgrade tests
        if: |
          contains(github.event.pull_request.labels.*.name, 'test/e2e') ||
          contains(github.event.pull_request.labels.*.name, 'test/e2e-db-upgrade')
        run: |
          make test-e2e-db-upgrade

      - name: Clean up custom resources
        continue-on-error: true
        # If this does not finish in 10 minutes, it's stuck with some resource having a finalizer.
        timeout-minutes: 10
        run: |
          make cluster-cleanup

      - name: Scale down cluster
        run: |
          eksctl scale nodegroup --cluster="$CLUSTER_NAME" --nodes=0 "$NODEPOOL_NAME"
        env:
          CLUSTER_NAME: "everest-e2e-dev-eks-cluster"
          NODEPOOL_NAME: "everest-e2e-dev-eks-workers-glowworm"

      - name: Clean up resources and CRDs
        run: |
          make cluster-cleanup

  e2e-data-importer-tests-flows:
    name: Data importer tests
    if: |
      contains(github.event.pull_request.labels.*.name, 'test/e2e') ||
      contains(github.event.pull_request.labels.*.name, 'test/e2e-data-importer')
    strategy:
      fail-fast: false
      matrix:
        make_target:
          - test-e2e-data-importer-pg
          - test-e2e-data-importer-psmdb
          - test-e2e-data-importer-pxc
    uses: ./.github/workflows/e2e-data-importer.yaml
    secrets: inherit
    with:
      make_target: ${{ matrix.make_target }}

name: Main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  check:
    name: Checks
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        go-version: ${{ fromJson(inputs.go-version || '["1.21.x"]') }}
        may-fail: [ false ]

    env:
      GO_VERSION: ${{ matrix.go-version }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go release
        if: env.GO_VERSION != 'tip'
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
          check-latest: true

      - name: Install development tools
        run: make init

      - name: Check build
        run: make build

      - name: Check files are formatted and no source code changes
        run: |
          make format
          pushd tools && go mod tidy -v
          popd        && go mod tidy -v
          git status
          git diff --exit-code
      - name: Run check-license
        run: |
          # run license checker on configured files
          bin/license-eye -c .licenserc.yaml header check
      - name: Run go-sumtype
        run: bin/go-sumtype ./...

      - name: Run linters
        run: |
          # use GITHUB_TOKEN because only it has access to GitHub Checks API
          bin/golangci-lint run --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -reporter=github-pr-review -filter-mode=nofilter -fail-on-error=true

      - name: Check default main state - dev version
        run: |
          if ! grep -q "VERSION ?= 0.0.0" Makefile; then
            exit 1
          fi

      - name: Check default main state - generated files
        run: |
          make release
          echo "Checking there is no source code changes except of the file with the generated date after a release attempt"
          git diff --exit-code $(git ls-files | grep -v "bundle/manifests/everest-operator.clusterserviceversion.yaml")

      - name: Run debug commands on failure
        if: ${{ failure() }}
        run: |
          env
          go version
          go env
          pwd
          git status

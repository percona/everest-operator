---
name: Linter checks
on:
  workflow_call:
    inputs:
      linter:
        description: 'Linter to run'
        type: string
        required: true

jobs:
  linter-check:
    name: linter
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go release
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run license check
        if: ${{ inputs.linter == 'license-check' }}
        run: |
          # run license checker on configured files
          go tool license-eye -c .licenserc.yaml header check

      - name: Fix license check
        if: ${{ inputs.linter == 'license-check' }}
        run: |
          # run license checker on configured files
          go tool license-eye -c .licenserc.yaml header fix
      - uses: ./.github/actions/reviewdog-suggester
        if: ${{ inputs.linter == 'license-check' }}
        with:
          tool_name: license-eye

      - name: Run golangci-lint
        if: ${{ inputs.linter == 'golangci-lint' }}
        run: go tool golangci-lint run --config=./.golangci.yml --new-from-rev=$(git merge-base main HEAD) --fix | go tool reviewdog -f=golangci-lint -reporter=github-pr-review
        continue-on-error: true
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/reviewdog-suggester
        if: ${{ inputs.linter == 'golangci-lint' }}
        with:
          tool_name: golangci-lint

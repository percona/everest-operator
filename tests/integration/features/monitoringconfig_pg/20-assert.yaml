apiVersion: kuttl.dev/v1
kind: TestAssert
timeout: 30
collectors:
  - command: kubectl -n $NAMESPACE get db/pg-mc -o yaml
  - command: kubectl -n $NAMESPACE get monitoringconfig/test-mc -o yaml
  - command: kubectl -n $NAMESPACE get secret/mc-secret -o yaml
  - command: kubectl -n $NAMESPACE get perconapgcluster/pg-mc -o yaml
  - command: kubectl -n $NAMESPACE get secret/everest-secrets-pg-mc-pmm -o yaml
---
apiVersion: everest.percona.com/v1alpha1
kind: DatabaseCluster
metadata:
  name: pg-mc
  labels:
    clusterName: pg-mc
spec:
  monitoring:
    monitoringConfigName: test-mc
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
---
apiVersion: everest.percona.com/v1alpha1
kind: MonitoringConfig
metadata:
  name: test-mc
  finalizers:
    - everest.percona.com/vmagent
    - everest.percona.com/in-use-protection
spec:
  type: pmm
  credentialsSecretName: mc-secret
  verifyTLS: false
  pmm:
    url: http://localhost2
    image: percona/pmm-client:2
status:
  inUse: true
---
apiVersion: v1
kind: Secret
metadata:
  name: mc-secret
  ownerReferences:
    - apiVersion: everest.percona.com/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: MonitoringConfig
      name: test-mc
type: Opaque
data:
  apiKey: YWJjZGVm
---
apiVersion: pgv2.percona.com/v2
kind: PerconaPGCluster
metadata:
  name: pg-mc
spec:
  pmm:
    enabled: true
    serverHost: localhost2
    secret: everest-secrets-pg-mc-pmm
    image: percona/pmm-client:2
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
---
apiVersion: v1
kind: Secret
metadata:
  name: everest-secrets-pg-mc-pmm
  ownerReferences:
    - apiVersion: everest.percona.com/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: DatabaseCluster
      name: pg-mc
type: Opaque
data:
  PMM_SERVER_KEY: YWJjZGVm
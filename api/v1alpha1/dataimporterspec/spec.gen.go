// Package dataimporterspec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package dataimporterspec

// ObjectReference contains a reference to a Kubernetes resource.
type ObjectReference struct {
	// Name specifies the name of the referenced Kubernetes resource.
	Name string `json:"name,omitempty"`

	// Namespace specifies the namespace of the referenced Kubernetes resource.
	Namespace string `json:"namespace,omitempty"`
}

// S3 contains storage configuration for importing data from an S3 bucket.
type S3 struct {
	// AccessKeyID specifies the AWS access key ID for S3 authentication.
	AccessKeyID string `json:"accessKeyID,omitempty"`

	// Bucket contains the name of the S3 bucket containing the data to import.
	Bucket string `json:"bucket,omitempty"`

	// EndpointURL contains the endpoint URL for the S3-compatible storage service.
	EndpointURL string `json:"endpointURL,omitempty"`

	// ForcePathStyle specifies whether to use path-style URLs for S3 access (instead of virtual-hosted style).
	ForcePathStyle bool `json:"forcePathStyle,omitempty"`

	// Region contains the AWS region of the S3 bucket.
	Region string `json:"region,omitempty"`

	// SecretKey specifies AWS secret access key for S3 authentication.
	SecretKey string `json:"secretKey,omitempty"`

	// VerifyTLS specifies whether to verify TLS/SSL certificates when connecting to S3.
	VerifyTLS bool `json:"verifyTLS,omitempty"`
}

// Source contains the location and method for the data to be imported.
type Source struct {
	// Path specifies the path to the data to be imported in the given source.
	Path string `json:"path,omitempty"`

	// S3 contains storage configuration for importing data from an S3 bucket.
	S3 *S3 `json:"s3,omitempty"`
}

// Spec defines the structure of the JSON payload that is passed to the container running the importer process.
//
// The importer is expected to read a path to this JSON as the first command-line argument. For example:
//
// ./my-importer.sh /path/to/spec.json
//
// This serves as a contract between Everest and external importers.
type Spec struct {
	// Params Contains parameters for customizing the import process, specific to the DataImporter used.
	Params map[string]interface{} `json:"params,omitempty"`

	// Source contains the location and method for the data to be imported.
	Source Source `json:"source"`

	// Target defines the database cluster and connection details for the import operation.
	//
	// The importer is expected to use this information to connect to the target database and perform the import.
	Target Target `json:"target"`
}

// Target defines the database cluster and connection details for the import operation.
//
// The importer is expected to use this information to connect to the target database and perform the import.
type Target struct {
	// DatabaseClusterRef contains a reference to a Kubernetes resource.
	DatabaseClusterRef *ObjectReference `json:"databaseClusterRef,omitempty"`

	// Host specifies the hostname or IP address of the target database server.
	Host string `json:"host,omitempty"`

	// Password specifies the password for authenticating to the target database.
	Password string `json:"password,omitempty"`

	// Port specifies the port number for connecting to the target database server.
	Port string `json:"port,omitempty"`

	// Type specifies the type of the target database (e.g., MySQL, PostgreSQL, MongoDB).
	Type string `json:"type,omitempty"`

	// User specifies the username for authenticating to the target database.
	User string `json:"user,omitempty"`
}
